{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { TokenInstance, Init, onConnect, getAccounts } from \"./services/EthereumConnexion\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [accounts, setAccounts] = useState([]);\n  useEffect(() => {\n    console.log(\"Initialization...\");\n    Init();\n    onConnect().then(function (result) {\n      //setName(result);\n      const tokenInstance = TokenInstance();\n      tokenInstance.name().then(function (result) {\n        setName(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      tokenInstance.symbol().then(function (result) {\n        setSymbol(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      tokenInstance.totalSupply().then(function (result) {\n        let supp = parseFloat(result.toString()) / 10 ** 18;\n        setTotalSupply(supp);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      getAccounts().then(function (result) {\n        setAccounts([...accounts, result]);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const getCurrentBalance = () => {\n    tokenInstance.balanceOf(accounts[0]).then(function (result) {\n      return result;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Supply: \", totalSupply, \" \", symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"My balance: \", getCurrentBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"89NRCIoDxzj1Sz2IREpEPBPvRnk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/App.js"],"names":["React","useState","useEffect","Button","TokenInstance","Init","onConnect","getAccounts","App","name","setName","symbol","setSymbol","totalSupply","setTotalSupply","accounts","setAccounts","console","log","then","result","tokenInstance","catch","error","supp","parseFloat","toString","getCurrentBalance","balanceOf"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { TokenInstance, Init, onConnect, getAccounts } from \"./services/EthereumConnexion\";\n\nfunction App() {\n\n  const [name, setName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [accounts, setAccounts] = useState([]);\n\n  useEffect(() => {\n    console.log(\"Initialization...\");\n    Init();\n\n    onConnect().then(function (result) {\n      //setName(result);\n      const tokenInstance = TokenInstance();\n\n      tokenInstance.name().then(function (result) {\n        setName(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      tokenInstance.symbol().then(function (result) {\n        setSymbol(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      tokenInstance.totalSupply().then(function (result) {\n        let supp = parseFloat(result.toString()) / 10 ** 18;\n        setTotalSupply(supp);\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      getAccounts().then(function (result) {\n        setAccounts([...accounts, result]);\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const getCurrentBalance = () => {\n    tokenInstance.balanceOf(accounts[0]).then(function(result){\n      return result;\n    }).catch(function(error){\n      console.log(error);\n    });\n  };\n\n  return (\n    <>\n      <p><b>{name}</b></p>\n      <p>Total Supply: {totalSupply} {symbol}</p>\n      <p>My balance: {getCurrentBalance}</p>\n      {/* <Button variant=\"primary\">Primary</Button>{' '} */}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}