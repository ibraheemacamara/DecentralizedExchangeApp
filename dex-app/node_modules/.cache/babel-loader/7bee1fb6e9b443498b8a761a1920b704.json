{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/Transfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport provider from '../services/provider';\nimport EthereumConnexion from '../services/EthereumConnexion';\n\nfunction Transfer() {\n  _s();\n\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState('');\n  const [amount, setAmount] = useState(0);\n  useEffect(() => {\n    provider.listAccounts().then(function (result) {\n      console.log(result);\n      setAccounts(result);\n      setSelectedAccount(accounts[0]);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  function handleChange(event) {\n    setSelectedAccount(event.target.value);\n  }\n\n  ;\n\n  function handleAmount(event) {\n    setAmount(event.target.value);\n  }\n\n  ;\n\n  function handleSubmit(event) {\n    console.log(\"Request tranfer. To: \" + accounts[selectedAccount] + \", Amount: \" + amount);\n    const to = accounts[selectedAccount];\n    const amountToTransfer = parseFloat(amount) * 10 ** 18;\n    console.log(amountToTransfer); //ethers.utils.bigNumberify(0)\n\n    EthereumConnexion.CreateInstances();\n    const insanceWithSigner = EthereumConnexion.GetInsanceWithSigner();\n    console.log(insanceWithSigner);\n    insanceWithSigner.transfer(to, ethers.utils.bigNumberify(amountToTransfer)).then(function (result) {\n      console.log(\"Transfer succeded!\" + result);\n      window.confirm(\"Transfert ?\");\n    }).catch(function (error) {\n      console.log(error);\n      window.confirm(\"Transfert ?\");\n    });\n    event.preventDefault();\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"To Address:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAccount,\n        onChange: handleChange,\n        children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: accounts.indexOf(account),\n          children: account\n        }, accounts.indexOf(account).toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: handleAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), \"IKC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Transfer, \"5Ubn+bLPT98/j4CqtP1hxH6DZk4=\");\n\n_c = Transfer;\n;\nexport default Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"sources":["/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/Transfer.js"],"names":["React","useState","useEffect","ethers","provider","EthereumConnexion","Transfer","accounts","setAccounts","selectedAccount","setSelectedAccount","amount","setAmount","listAccounts","then","result","console","log","catch","error","handleChange","event","target","value","handleAmount","handleSubmit","to","amountToTransfer","parseFloat","CreateInstances","insanceWithSigner","GetInsanceWithSigner","transfer","utils","bigNumberify","window","confirm","preventDefault","map","account","indexOf","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport provider from '../services/provider';\nimport EthereumConnexion from '../services/EthereumConnexion';\n\nfunction Transfer() {\n\n    const [accounts, setAccounts] = useState([]);\n    const [selectedAccount, setSelectedAccount] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    useEffect(() => {\n        provider.listAccounts().then(function (result) {\n            console.log(result);\n            setAccounts(result);\n            setSelectedAccount(accounts[0]);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }, []);\n\n    function handleChange(event){\n        setSelectedAccount(event.target.value);\n    };\n\n    function handleAmount(event){\n        setAmount(event.target.value);\n    };\n\n    function handleSubmit(event){\n        console.log(\"Request tranfer. To: \"+accounts[selectedAccount]+\", Amount: \"+amount);\n\n        const to = accounts[selectedAccount];\n        const amountToTransfer = parseFloat(amount) * (10 ** 18); \n\n        console.log(amountToTransfer);\n        //ethers.utils.bigNumberify(0)\n\n        EthereumConnexion.CreateInstances();\n        const insanceWithSigner = EthereumConnexion.GetInsanceWithSigner();\n\n        console.log(insanceWithSigner);\n\n\n        insanceWithSigner.transfer(to, ethers.utils.bigNumberify(amountToTransfer))\n                          .then(function(result){\n                              console.log(\"Transfer succeded!\" + result);\n                              window.confirm(\"Transfert ?\");\n                          }).catch(function(error){\n                              console.log(error);\n                              window.confirm(\"Transfert ?\");\n                          });\n                          \n        event.preventDefault();\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                To Address: \n                <select  value={selectedAccount} onChange={handleChange}>\n                    {accounts.map((account) => (\n                        <option key={accounts.indexOf(account).toString()} value={accounts.indexOf(account)}>{account}</option>\n                    ))}\n                </select>\n            </label>\n            <label>\n                Amount: \n                <input type=\"number\" value={amount} onChange={handleAmount}/>IKC\n            </label>\n            <input type=\"submit\" value=\"Transfer\" />\n        </form>\n    );\n};\n\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}