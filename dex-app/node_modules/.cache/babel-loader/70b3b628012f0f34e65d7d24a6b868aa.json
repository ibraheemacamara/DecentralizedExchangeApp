{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/AlertFailed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n\nfunction AlertFailed(props) {\n  _s();\n\n  const [show, setShow] = useState(props.show);\n  console.log(\"Alert danger: isFailed: \" + props.show + \" Field: \" + props.field);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setShow(false),\n      dismissible: true,\n      children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: \"Something goes wrong!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", props.field, \" is not correct.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(AlertFailed, \"mQWHriPKy4XwAEvhdcrUnlOhHco=\");\n\n_c = AlertFailed;\nexport default AlertFailed;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertFailed\");","map":{"version":3,"sources":["/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/AlertFailed.js"],"names":["React","useState","Alert","Button","AlertFailed","props","show","setShow","console","log","field"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,sCAAP;AACA,OAAO,YAAP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACI,KAAK,CAACC,IAAP,CAAhC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAA2BJ,KAAK,CAACC,IAAjC,GAAsC,UAAtC,GAAiDD,KAAK,CAACK,KAAnE;;AAEA,MAAIJ,IAAJ,EAAU;AACN,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA9C;AAAuD,MAAA,WAAW,MAAlE;AAAA,8BACI,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,2BACSF,KAAK,CAACK,KADf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AACD,sBACI,qCADJ;AAGH;;GAlBQN,W;;KAAAA,W;AAoBT,eAAeA,WAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n\nfunction AlertFailed(props) {\n    const [show, setShow] = useState(props.show);\n\n    console.log(\"Alert danger: isFailed: \"+props.show+\" Field: \"+props.field);\n\n    if (show) {\n        return (\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                <Alert.Heading>Something goes wrong!</Alert.Heading>\n                <p>\n                    The {props.field} is not correct.\n          </p>\n            </Alert>\n        );\n    }\n    return (\n        <></>\n    );\n}\n\nexport default AlertFailed;"]},"metadata":{},"sourceType":"module"}