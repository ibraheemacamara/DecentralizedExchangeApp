{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/CheckBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EthereumConnexion from './EthereumConnexion';\n\nfunction CheckBalnce(props) {\n  _s();\n\n  const [balance, setBalance] = useState();\n  useEffect(() => {\n    console.log(\"Checking balance of account: \" + props.account);\n\n    if (props.account === undefined) {\n      props.account = \"0x25ef6f9ae0af5e177629418cb50032b40cc2f287\";\n    }\n\n    EthereumConnexion.CreateInstances();\n    const tokenInstance = EthereumConnexion.GetInstance();\n    tokenInstance.balanceOf(props.account).then(function (result) {\n      console.log(\"Received: \" + result);\n      const balance = parseFloat(result.toString()); //s / 10 ** 18;\n\n      console.log(balance);\n      setBalance(balance);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"My balance: \", balance, \" IKC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CheckBalnce, \"BKBSTWngT5H2uGQVh7muJtI4P/0=\");\n\n_c = CheckBalnce;\n;\nexport default CheckBalnce;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBalnce\");","map":{"version":3,"sources":["/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/CheckBalance.js"],"names":["React","useState","useEffect","EthereumConnexion","CheckBalnce","props","balance","setBalance","console","log","account","undefined","CreateInstances","tokenInstance","GetInstance","balanceOf","then","result","parseFloat","toString","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZM,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCJ,KAAK,CAACK,OAApD;;AACA,QAAIL,KAAK,CAACK,OAAN,KAAkBC,SAAtB,EAAiC;AAC7BN,MAAAA,KAAK,CAACK,OAAN,GAAgB,4CAAhB;AACH;;AAEDP,IAAAA,iBAAiB,CAACS,eAAlB;AACA,UAAMC,aAAa,GAAGV,iBAAiB,CAACW,WAAlB,EAAtB;AAEAD,IAAAA,aAAa,CAACE,SAAd,CAAwBV,KAAK,CAACK,OAA9B,EAAuCM,IAAvC,CAA4C,UAAUC,MAAV,EAAkB;AAC1DT,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeQ,MAA3B;AACA,YAAMX,OAAO,GAAGY,UAAU,CAACD,MAAM,CAACE,QAAP,EAAD,CAA1B,CAF0D,CAEZ;;AAC9CX,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACH,KALD,EAKGc,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH,KAPD;AASH,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACI;AAAA,2BACI;AAAA,iCAAgBf,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GA9BQF,W;;KAAAA,W;AA8BR;AAED,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EthereumConnexion from './EthereumConnexion';\n\nfunction CheckBalnce(props) {\n\n    const [balance, setBalance] = useState();\n\n    useEffect(() => {\n\n        console.log(\"Checking balance of account: \" + props.account);\n        if (props.account === undefined) {\n            props.account = \"0x25ef6f9ae0af5e177629418cb50032b40cc2f287\";\n        }\n\n        EthereumConnexion.CreateInstances();\n        const tokenInstance = EthereumConnexion.GetInstance();\n\n        tokenInstance.balanceOf(props.account).then(function (result) {\n            console.log(\"Received: \" + result);\n            const balance = parseFloat(result.toString());//s / 10 ** 18;\n            console.log(balance);\n            setBalance(balance);\n        }).catch(function (error) {\n            console.log(error);\n        });\n\n    }, []);\n\n    return (\n        <>\n            <p>My balance: {balance} IKC</p>\n        </>\n    );\n};\n\nexport default CheckBalnce;"]},"metadata":{},"sourceType":"module"}