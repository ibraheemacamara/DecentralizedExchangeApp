{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/CheckBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EthereumConnexion from './EthereumConnexion';\n\nfunction CheckBalnce(props) {\n  _s();\n\n  const [balance, setBalance] = useState();\n  useEffect(() => {\n    console.log(\"Checking balance of account: \" + props.account);\n\n    if (props.account != undefined) {\n      EthereumConnexion.CreateInstances();\n      const tokenInstance = EthereumConnexion.GetInstance();\n      tokenInstance.balanceOf(props.account).then(function (result) {\n        const balance = parseFloat(result.toString()) / 10 ** 18;\n        console.log(balance);\n        setBalance(balance);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      console.log(\"The address is undefined!!!\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"My balance: \", balance, \" IKC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CheckBalnce, \"BKBSTWngT5H2uGQVh7muJtI4P/0=\");\n\n_c = CheckBalnce;\n;\nexport default CheckBalnce;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBalnce\");","map":{"version":3,"sources":["/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/CheckBalance.js"],"names":["React","useState","useEffect","EthereumConnexion","CheckBalnce","props","balance","setBalance","console","log","account","undefined","CreateInstances","tokenInstance","GetInstance","balanceOf","then","result","parseFloat","toString","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZM,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCJ,KAAK,CAACK,OAApD;;AACA,QAAIL,KAAK,CAACK,OAAN,IAAiBC,SAArB,EAAgC;AAE5BR,MAAAA,iBAAiB,CAACS,eAAlB;AACA,YAAMC,aAAa,GAAGV,iBAAiB,CAACW,WAAlB,EAAtB;AAEAD,MAAAA,aAAa,CAACE,SAAd,CAAwBV,KAAK,CAACK,OAA9B,EAAuCM,IAAvC,CAA4C,UAAUC,MAAV,EAAkB;AAC1D,cAAMX,OAAO,GAAGY,UAAU,CAACD,MAAM,CAACE,QAAP,EAAD,CAAV,GAAgC,MAAM,EAAtD;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAC,QAAAA,UAAU,CAACD,OAAD,CAAV;AACH,OAJD,EAIGc,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBb,QAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH,OAND;AAOH,KAZD,MAaK;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACJ,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACI;AAAA,2BACI;AAAA,iCAAgBH,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GA9BQF,W;;KAAAA,W;AA8BR;AAED,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EthereumConnexion from './EthereumConnexion';\n\nfunction CheckBalnce(props) {\n\n    const [balance, setBalance] = useState();\n\n    useEffect(() => {\n\n        console.log(\"Checking balance of account: \" + props.account);\n        if (props.account != undefined) {\n\n            EthereumConnexion.CreateInstances();\n            const tokenInstance = EthereumConnexion.GetInstance();\n\n            tokenInstance.balanceOf(props.account).then(function (result) {\n                const balance = parseFloat(result.toString()) / 10 ** 18;\n                console.log(balance);\n                setBalance(balance);\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n        else {\n            console.log(\"The address is undefined!!!\")\n        }\n    }, []);\n\n    return (\n        <>\n            <p>My balance: {balance} IKC</p>\n        </>\n    );\n};\n\nexport default CheckBalnce;"]},"metadata":{},"sourceType":"module"}