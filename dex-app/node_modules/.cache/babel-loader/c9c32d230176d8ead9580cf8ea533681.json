{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/Transfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport provider from '../services/provider';\n\nfunction Transfer() {\n  _s();\n\n  const [accounts, setAccounts] = useState([]);\n  let selectedAccount;\n  let amount = 0;\n  useEffect(() => {\n    provider.listAccounts().then(function (result) {\n      console.log(result);\n      setAccounts(result);\n      selectedAccount = accounts[0];\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  function handleChange(value) {\n    selectedAccount = value;\n  }\n\n  ;\n\n  function handleAmount(value) {\n    amount = value;\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"To Address:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAccount,\n        onChange: handleChange,\n        children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account,\n          children: account\n        }, accounts.indexOf(account), false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: handleAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \"IKC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Transfer, \"5m1axUzq0nW9J3umrT2fIaaNwOQ=\");\n\n_c = Transfer;\n;\nexport default Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"sources":["/Users/ibrahimacamara/Projects/Blockchain/DecentralizedExchange/dex-app/src/services/Transfer.js"],"names":["React","useState","useEffect","provider","Transfer","accounts","setAccounts","selectedAccount","amount","listAccounts","then","result","console","log","catch","error","handleChange","value","handleAmount","map","account","indexOf"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIM,eAAJ;AACA,MAAIC,MAAM,GAAG,CAAb;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,QAAQ,CAACM,YAAT,GAAwBC,IAAxB,CAA6B,UAAUC,MAAV,EAAkB;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAL,MAAAA,WAAW,CAACK,MAAD,CAAX;AACAJ,MAAAA,eAAe,GAAGF,QAAQ,CAAC,CAAD,CAA1B;AACH,KAJD,EAIGS,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxBV,IAAAA,eAAe,GAAGU,KAAlB;AACH;;AAAA;;AAED,WAASC,YAAT,CAAsBD,KAAtB,EAA4B;AACxBT,IAAAA,MAAM,GAAGS,KAAT;AACH;;AAAA;AAED,sBACI;AAAA,4BACI;AAAA,6CAEI;AAAS,QAAA,KAAK,EAAEV,eAAhB;AAAiC,QAAA,QAAQ,EAAES,YAA3C;AAAA,kBACKX,QAAQ,CAACc,GAAT,CAAcC,OAAD,iBACV;AAAwC,UAAA,KAAK,EAAEA,OAA/C;AAAA,oBAAyDA;AAAzD,WAAaf,QAAQ,CAACgB,OAAT,CAAiBD,OAAjB,CAAb;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,yCAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEZ,MAA5B;AAAoC,QAAA,QAAQ,EAAEU;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAxCQd,Q;;KAAAA,Q;AAwCR;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport provider from '../services/provider';\n\nfunction Transfer() {\n\n    const [accounts, setAccounts] = useState([]);\n    let selectedAccount;\n    let amount = 0;\n\n    useEffect(() => {\n        provider.listAccounts().then(function (result) {\n            console.log(result);\n            setAccounts(result);\n            selectedAccount = accounts[0];\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }, []);\n\n    function handleChange(value){\n        selectedAccount = value;\n    };\n\n    function handleAmount(value){\n        amount = value;\n    };\n\n    return (\n        <form>\n            <label>\n                To Address: \n                <select  value={selectedAccount} onChange={handleChange}>\n                    {accounts.map((account) => (\n                        <option key={accounts.indexOf(account)} value={account}>{account}</option>\n                    ))}\n                </select>\n            </label>\n            <label>\n                Amount: \n                <input type=\"number\" value={amount} onChange={handleAmount}/>IKC\n            </label>\n        </form>\n    );\n};\n\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}